<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/tx 
           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
           http://www.springframework.org/schema/data/jpa
           http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd
           http://www.springframework.org/schema/mvc
           http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd" 
           default-lazy-init="true">

	<!-- <bean id="propertyPlaceholderConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"> 
		<property name="locations"> <list> <value>classpath:configuration.properties</value> 
		<value>classpath:db.properties</value> </list> </property> </bean> -->

	<!-- Taduction -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="classpath:messages" />
		<property name="defaultEncoding" value="UTF-8" />
	</bean>

	<bean id="DBPropertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:db.properties" />
		<property name="ignoreUnresolvablePlaceholders" value="true" />
	</bean>

	<jpa:repositories base-package="com.orange.OSAC.dao" />

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${db.dataSource.driver}" />
		<property name="jdbcUrl" value="${db.dataSource.url}" />
		<property name="user" value="${db.dataSource.username}" />
		<property name="password" value="${db.dataSource.password}" />
		<property name="maxPoolSize" value="${db.dataSource.maxPoolSize}" />
		<property name="minPoolSize" value="${db.dataSource.minPoolSize}" />
		<property name="acquireIncrement" value="${db.dataSource.acquireIncrement}" />
		<property name="maxIdleTime" value="${db.dataSource.inactivityTimeout}" />
		<property name="maxStatements" value="${db.dataSource.maxStatements}" />
	</bean>

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="persistenceUnitName" value="emf" />
		<property name="packagesToScan">
			<list>
				<!-- <value>hei.tp07.entities</value> -->
				<value>com.orange.OSAC.entities</value>
			</list>
		</property>
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="generateDdl" value="${jpa.generateDdl}" />
				<property name="showSql" value="${jpa.showSql}" />
			</bean>
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.format_sql">${hibernate.formatSql}</prop>
				<prop key="hibernate.dialect">${jpa.dialect}</prop>
				<!-- <prop key="hibernate.hbm2ddl.auto">create</prop> --> <!-- NE PAS METTRE CA EN PROD :D -->
				<prop key="hibernate.default_batch_fetch_size">8</prop>
				<prop key="hibernate.archive.autodetection">class</prop>
				<prop key="hibernate.generate_statistics">true</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<!-- <prop key="hibernate.cache.provider_class">net.sf.ehcache.hibernate.EhCacheProvider</prop> -->
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory
				</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
			</props>
		</property>
	</bean>

	<!-- Configuration File -->
	<bean id="configurationFile" class="com.orange.OSAC.configurationFile.ConfigProperties" />

	<!-- Services Files -->
	<context:component-scan base-package="com.orange.OSAC.services" />

	<!-- Tools Files -->
	<context:component-scan base-package="com.orange.OSAC.tools" />

	<!-- New try annotaion (http://www.developer.com/java/web/use-the-spring-3-formatter-spi-for-custom-formatting.html) -->
	<mvc:annotation-driven />


	<!-- We use annotation in form -->
	<!-- <mvc:annotation-driven conversion-service="conversionService"/> -->

	<!-- <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean"> 
		<property name="formatters"> <set> <ref bean="applicationFormatter"/> <bean 
		class="com.orange.OSAC.tools.ApplicationFormatter" /> </set> </property> 
		</bean> -->

	<!-- Interceptors -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/" />
			<mvc:mapping path="/statistique/**" />
			<mvc:mapping path="/parametre/**" />
			<mvc:mapping path="/administration/**" />
			<mvc:exclude-mapping path="/connexion" />
			<bean class="com.orange.OSAC.controller.interceptor.defaultInterceptor" />
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/administration/**" />
			<bean class="com.orange.OSAC.controller.interceptor.userTypeInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>

</beans>