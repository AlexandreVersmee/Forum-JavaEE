package com.orange.OSAC.filter;

import java.io.IOException;

import javax.servlet.Filter;
import javax.servlet.FilterChain;
import javax.servlet.FilterConfig;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class MainFilter implements Filter {

	/* Debug */
	private final static Logger logger = LoggerFactory.getLogger(MainFilter.class);

	
	@Override
	public void init(FilterConfig filterConfig) throws ServletException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void doFilter(ServletRequest request, ServletResponse response,
			FilterChain chain) throws IOException, ServletException
	{
		HttpServletRequest req = (HttpServletRequest) request;
		HttpServletResponse res = (HttpServletResponse) response;

		if (req.getRequestURI().endsWith("connexion") == false)
			logger.debug("ce n'est pas la page de connexion ! [url:{}]",req.getRequestURI());
		if (req.getRequestURI().endsWith("connexion") == true)
			logger.debug("c'est la page de connexion ![url:{}]",req.getRequestURI());
		
		
		if (req.getSession().getAttribute("userSession") == null && 
			req.getRequestURI().endsWith("connexion") == false &&
			req.getRequestURI().startsWith("/OSAC/resources/") == false) {
			logger.debug("User not login -> no UserSession");
			req.getSession().setAttribute("ERROR_MESSAGE","Vous devez vous connecter avant de pouvoir utiliser l'application OSAC.");
			res.sendRedirect("connexion");
		}
		else
			chain.doFilter(req, res);
	}
		

	@Override
	public void destroy() {
		// TODO Auto-generated method stub
		
	}

}
